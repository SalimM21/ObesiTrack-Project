#!/usr/bin/env python3
"""
Script pour v√©rifier le contenu de la base de donn√©es
"""

import sqlite3

def check_database():
    try:
        print("üîç V√©rification de la base de donn√©es...")
        
        conn = sqlite3.connect('obesitrack.db')
        cursor = conn.cursor()
        
        # V√©rifier les tables
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        print(f"üìã Tables trouv√©es: {[table[0] for table in tables]}")
        
        # Compter les utilisateurs
        cursor.execute("SELECT COUNT(*) FROM users")
        user_count = cursor.fetchone()[0]
        print(f"üë• Nombre d'utilisateurs: {user_count}")
        
        # Compter les pr√©dictions
        cursor.execute("SELECT COUNT(*) FROM predictions")
        prediction_count = cursor.fetchone()[0]
        print(f"üîÆ Nombre de pr√©dictions: {prediction_count}")
        
        # Afficher quelques utilisateurs
        if user_count > 0:
            cursor.execute("SELECT full_name, email, role FROM users LIMIT 5")
            users = cursor.fetchall()
            print("\nüë§ Premiers utilisateurs:")
            for user in users:
                print(f"   - {user[0]} ({user[1]}) - {user[2]}")
        
        # Afficher quelques pr√©dictions
        if prediction_count > 0:
            cursor.execute("SELECT result, probability FROM predictions LIMIT 5")
            predictions = cursor.fetchall()
            print("\nüîÆ Premi√®res pr√©dictions:")
            for pred in predictions:
                print(f"   - {pred[0]} (prob: {pred[1]})")
        
        conn.close()
        print("\n‚úÖ V√©rification termin√©e!")
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_database()
